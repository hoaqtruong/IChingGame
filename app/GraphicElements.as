package app {		import flash.display.*;	import flash.events.*;	import flash.text.*	import flash.utils.*;		public class GraphicElements extends MovieClip{		private var _lineSpacing = 20;				public function GraphicElements() {			// constructor code						}								private function goTo(evt:MouseEvent):void{			//****btn.name needs to be the same with a frame label on IChingGame.as			//How to refer it of the specific frame on the Main Stage?			var IChingGame:Object = evt.currentTarget.parent.parent.parent as Object;			IChingGame.gotoAndStop(evt.currentTarget.name);				if(evt.currentTarget.name != "IChing_intro" && IChingGame.getChildByName("IChing_intro_display")) {IChingGame.removeChild(IChingGame.getChildByName("IChing_intro_display"));}			if(evt.currentTarget.name != "Level1_play" && IChingGame.getChildByName("board_L1")) {IChingGame.removeChild(IChingGame.getChildByName("board_L1"));}			if(evt.currentTarget.name != "IChing_play" && IChingGame.getChildByName("ICBoard")) {IChingGame.removeChild(IChingGame.getChildByName("ICBoard"));}		}				public function drawMenuBg(x:uint, y:uint, w:uint, h:uint, color:uint, a:uint):Sprite{			var menuBg:Sprite = new Sprite();						// draw menu Background Image at bottom			var menuBgImg:Bitmap = new Bitmap(new Intro_menu_bg(0,0));			menuBg.addChild(menuBgImg);						// draw menu background on top 			var bg:Shape = new Shape;			bg.graphics.clear();			bg.graphics.beginFill(color); 			bg.graphics.drawRect(x,y,w,h); 			bg.graphics.endFill();			bg.alpha = .8;			bg.x = 5;			menuBg.addChild(bg);						//draw top decorLine			IChingGame.IG.color = IChingGame.css.colorScheme.white;			var topDecorLine:Sprite = IChingGame.IG.drawDecorLine(IChingGame.menuWidth-15, 15, 3);			topDecorLine.x = 7;			topDecorLine.y = 7;			topDecorLine.alpha = 0.5;			menuBg.addChild(topDecorLine);						//draw bottom decorLine			var bottomDecorLine:Sprite = IChingGame.IG.drawDecorLine(IChingGame.menuWidth-15, 15, 3);			bottomDecorLine.x = 7;			bottomDecorLine.y = IChingGame.menuHeight - 22;			bottomDecorLine.alpha = 0.5;			menuBg.addChild(bottomDecorLine);						return menuBg;		}				public function drawMenuLogo(numOfLines:uint = 3, logoWidth:uint = 30):Sprite {			var logo:Sprite = new Sprite();			IChingGame.IG.lineWidth = logoWidth;			IChingGame.IG.color = IChingGame.css.colorScheme.white;			logo = IChingGame.IG.drawRandom(numOfLines);			logo.x = 460;			logo.y = 18;			logo.alpha = 0.5;			return logo;		}						public function drawRectangle(x:uint, y:uint, w:uint, h:uint, color:uint):Shape {			var r:Shape = new Shape();			r.graphics.beginFill(color); 			r.graphics.drawRect(x,y,w,h); 			r.graphics.endFill();			return r;		}			public function drawMenuHeading(txt:String = "IChing", tag:String = ".menuHead"):TextField {			var menuHead:TextField = new TextField();			menuHead.styleSheet = IChingGame.css.style;			menuHead.text = "<"+tag+">"+txt+"</"+tag+">";			menuHead.width = txt.length*14;//14 is the font size			return menuHead;		}				public function drawMenuItem(txt:String = "IChing", line:uint = 1):Sprite {			var menuItem:Sprite = new Sprite;						var heading:TextField = drawMenuHeading(txt);			heading.y = _lineSpacing*2.5*line;			menuItem.addChild(heading);						var introBtn:Sprite = drawMenuBtn(txt+"_intro", "Intro", "left",".menuItem");			introBtn.y = heading.y + _lineSpacing;			menuItem.addChild(introBtn);						var playBtn:Sprite = drawMenuBtn(txt+"_play", "Play", "right",".menuItem");			playBtn.x = IChingGame.menuWidth-66;//66 is how far the word "play" should be from the right border.			playBtn.y = heading.y +   _lineSpacing;			menuItem.addChild(playBtn);						return menuItem;		}		public function drawMenuBtn(btnName:String = "IChing", txt:String = "Play", pointTo:String = "right", tag:String = ".menuItem"):Sprite {			var btn:Sprite = new Sprite();			var txtField:TextField = new TextField();			var triangle:Shape = drawTriangleIcon(10,IChingGame.css.colorScheme.mediumGoldenRod, pointTo);						txtField.styleSheet = IChingGame.css.style;			txtField.text = "<"+tag+">"+txt+"</"+tag+">";			if(pointTo == "right" || pointTo == "Right") {				triangle.x = txtField.text.length/2*13;//13 is the font size				triangle.y = 5; //because a shape drew has no internal leading as in font 							} else {				triangle.y = 5;// add internal leading amount to align a shape with font				txtField.x = 10 + 2;// 10 is triagle.width + 2 px padding			}			btn.name = btnName;			btn.addChild(triangle);			btn.addChild(txtField);			btn.mouseChildren = false;			btn.buttonMode = true;			btn.addEventListener(MouseEvent.CLICK, goTo);			return btn;		}								public function drawTriangleIcon(w:uint, color:uint, pointTo:String = "right" ):Shape {			var triangleShape:Shape = new Shape();			triangleShape.graphics.beginFill(color);						if (pointTo == "right" || pointTo == "Right") {				triangleShape.graphics.moveTo(0, 0);				triangleShape.graphics.lineTo(w, w/2);				triangleShape.graphics.lineTo(0, w);				triangleShape.graphics.lineTo(0, 0);			} else if (pointTo == "left" || pointTo == "Left") {				triangleShape.graphics.moveTo(0, w/2);				triangleShape.graphics.lineTo(w, w);				triangleShape.graphics.lineTo(w, 0);				triangleShape.graphics.lineTo(0, w/2);			}						return triangleShape;		}						public function drawTriangleBtn(btnWidth:uint = 10, pointTo:String = "Left", upColor:uint = 0xFFFFFF, overColor:uint = 0xFFFFFF, downColor:uint = 0xFFFFFF, hitTestColor:uint= 0xFFFFFF):SimpleButton {			var btn:SimpleButton = new SimpleButton();			btn.upState = drawTriangleIcon(btnWidth,upColor,pointTo);      		btn.overState = drawTriangleIcon(btnWidth,overColor,pointTo);      		btn.downState = drawTriangleIcon(btnWidth,downColor,pointTo);      		btn.useHandCursor = true;      		btn.hitTestState = drawTriangleIcon(btnWidth,hitTestColor,pointTo);			return btn;					}						//Functions to SET and GET private properties              public function get lineSpacing():uint {            return _lineSpacing;        }               public function set lineSpacing(v:uint):void {            _lineSpacing = v;        }	}	}