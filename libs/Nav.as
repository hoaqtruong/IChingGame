package libs {	import flash.display.SimpleButton;	import flash.display.MovieClip;	import flash.events.Event;	import flash.text.TextFormat;	import flash.text.TextField;	import flash.events.MouseEvent;		public class Nav extends MovieClip{		public var display:MovieClip;					public var upState:MovieClip;		public var overState:MovieClip;		public var downState:MovieClip;		public var hitTestState:MovieClip;//		public var btnWidth:uint = 30;		//public var btnHeight:uint = 12;		public var padding:uint = 4;		public var txtFormat:TextFormat = new TextFormat();				public var currentBtn:SimpleButton;		public var visitedBtn:Array = new Array();						public function Nav(btnNames:Array) {			// constructor code					//display.x = 20;			//display.y = 250;			//set default for btn label			txtFormat.color = 0x999900;			txtFormat.font = "Tahoma";			txtFormat.size = 12;			txtFormat.bold = true;			txtFormat.kerning = true;			txtFormat.align = "center";						for (var i:uint=0; i<btnNames.length; i++) {				var b:SimpleButton = drawBtn(btnNames[i].toString());				b.x = (b.width + padding)*i;				this.activateBtn(b);							this.addChild(b);			}						//addChild(display);		}		//Once a btn is clicked, gotoAndStop at display frame #+1 which same as index # of the btn in the Nav (frame starts at 1. index # starts at 0)		//this function can be simplified if AS3 is able to set frame label: 		private function clickBtn(evt:Event):void {			currentBtn = evt.currentTarget as SimpleButton;			visitedBtn.push(currentBtn);			for (var i:uint=0; i<currentBtn.parent.numChildren;i++) {				if (currentBtn.parent.getChildAt(i).name == currentBtn.name)				display.gotoAndTop(i);// display.gotoAndStop(currentBtn.name)!!! but impossible for now				break;			}		}				private function activateBtn(btn:SimpleButton):void {			btn.addEventListener(MouseEvent.CLICK, clickBtn);		}				public function drawBtn(txtLabel:String):SimpleButton {			var mcUpState:MovieClip = new MovieClip();			var btn:SimpleButton = new SimpleButton();			btn.name = txtLabel;			var btnLabel:TextField = new TextField();			btnLabel.text = txtLabel;			btnLabel.setTextFormat(txtFormat);									//set upState			if(upState) {				mcUpState.addChild(upState);				mcUpState.addChild(btnLabel);			}else {				/*var btnDefaultBg:Shape = new Shape()				btnDefaultBg.graphics.beginFill( 0xFF0000 );				btnDefaultBg.graphics.drawRect( 0, 0, btnWidth, btnHeight );				btnDefaultBg.graphics.endFill();				mcUpState.addChild(btnDefaultBg);*/				mcUpState.addChild(btnLabel);				btn.upState = mcUpState;			}						if (hitTestState) {				var mcHitTestState:MovieClip = new MovieClip();				mcHitTestState.addChild(hitTestState);				mcHitTestState.addChild(btnLabel);				btn.hitTestState = mcHitTestState;			} else {				btn.hitTestState = btn.upState;			}						if (overState) {				var mcOverState:MovieClip = new MovieClip();				mcOverState.addChild(overState);				mcOverState.addChild(btnLabel);				btn.hitTestState = mcOverState;			} else {				btn.overState = btn.upState;			}						if (downState) {				var mcDownState:MovieClip = new MovieClip();				mcDownState.addChild(downState);				mcDownState.addChild(btnLabel);				btn.hitTestState = mcDownState;			} else {				btn.downState = btn.upState;			}						return btn;		}	}	}